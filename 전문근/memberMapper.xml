<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberSQL">
	<!-- 회원가입 -->
	<insert id="signUp" parameterType="member">
		insert into member(memId
						 , memPwd
						 , memName
						 , memBirth01
					 	 , memBirth02
						 , memBirth03
						 , memGender
						 , memEmail
						 , memEmail0
						 , memZipCode
						 , memAddr1
						 , memAddr2
						 , memMobile01
						 , memMobile02
						 , memMobile03
						 , contry
						 , logtime
				) values(#{memId, jdbcType=VARCHAR}
					   , #{memPwd, jdbcType=VARCHAR}
					   , #{memName, jdbcType=VARCHAR}
					   , #{memBirth01, jdbcType=VARCHAR}
					   , #{memBirth02, jdbcType=VARCHAR}
					   , #{memBirth03, jdbcType=VARCHAR}
					   , #{memGender, jdbcType=VARCHAR}
					   , #{memEmail, jdbcType=VARCHAR}
					   , #{memEmail0, jdbcType=VARCHAR}
					   , #{memZipCode, jdbcType=VARCHAR}
					   , #{memAddr1, jdbcType=VARCHAR}
				       , #{memAddr2, jdbcType=VARCHAR}
					   , #{memMobile01, jdbcType=VARCHAR}
					   , #{memMobile02, jdbcType=VARCHAR}
					   , #{memMobile03, jdbcType=VARCHAR}
					   , #{contry, jdbcType=VARCHAR}
					   , sysdate)
	</insert>
	
	<!-- 여권정보 -->
	<update id="passport" parameterType="member">
		update member set lastName = #{lastName}
							, firstName = #{firstName}
							, passportNumber = #{passportNumber, jdbcType=VARCHAR}
							, passportStartYear = #{passportStartYear}
							, passportStartMonth = #{passportStartMonth}
							, passportStartDay = #{passportStartDay}
							, passportEndYear = #{passportEndYear}
							, passportEndMonth = #{passportEndMonth}
							, passportEndDay = #{passportEndDay}
							where memId=#{memId, jdbcType=VARCHAR}
	</update>
	
	<!-- 비자정보 -->
	<update id="visa" parameterType="member">
		update member set visaContry = #{visaContry}
							, visaStartYear = #{visaStartYear}
							, visaStartMonth = #{visaStartMonth, jdbcType=VARCHAR}
							, visaStartDay = #{visaStartDay}
							, visaEndYear = #{visaEndYear}
							, visaEndMonth = #{visaEndMonth}
							, visaEndDay = #{visaEndDay}
							where memId=#{memId, jdbcType=VARCHAR}
	</update>
	
	<!-- 중복아이디 체크 -->
	<select id="isExistId" parameterType="String" resultType="member">
		select * from member where memId=#{memId}
	</select>
	
	<!-- 우편번호 체크-->
	<!--jdbctype=VARCHAR : null값인 경우 오류 안나게 함. -->
	<select id="getZipcodeList" parameterType="java.util.Map" resultType="zipcode">
		select * from NEWZIPCODE
		where sido like '%'|| #{sido, jdbcType=VARCHAR}||'%' and
			  sigungu like '%'||#{sigungu}||'%' and
			  roadname like '%'||#{roadname}||'%'
	</select>

	<select id="getPassport_visa" parameterType="java.lang.String" resultType="member">
		select * from member where memId=#{memId} 
	</select>
	
		<!-- 기본정보 가져오기 -->
	<select id="getMember" parameterType="java.lang.String" resultType="member">
		select * from member where memId=#{memId} 
	</select>
	
	<!-- 기본정보 변경값 저장 -->
	<update id="myBasicInfoConfirm" parameterType="member">
		update member set memBirth01=#{memBirth01, jdbcType=VARCHAR}
					 	 ,memBirth02=#{memBirth02, jdbcType=VARCHAR}
					 	 ,memBirth03=#{memBirth03, jdbcType=VARCHAR}
						 ,memGender=#{memGender, jdbcType=VARCHAR}		
						 ,memEmail=#{memEmail, jdbcType=VARCHAR}
						 ,memEmail0=#{memEmail0, jdbcType=VARCHAR}
						 ,memZipCode=#{memZipCode, jdbcType=VARCHAR}
					 	 ,memAddr1=#{memAddr1, jdbcType=VARCHAR}
				 		 ,memAddr2=#{memAddr2, jdbcType=VARCHAR}
						 ,memMobile01=#{memMobile01, jdbcType=VARCHAR}
						 ,memMobile02=#{memMobile02, jdbcType=VARCHAR}
					 	 ,memMobile03=#{memMobile03, jdbcType=VARCHAR}
						 ,contry=#{contry, jdbcType=VARCHAR}
						 ,logtime=sysdate where memId=#{memId, jdbcType=VARCHAR}
	</update>
	
	<!-- 로그인  -->
	<select id="login" parameterType="java.util.Map" resultType="member">
		select * from member where memId=#{id} and memPwd=#{pwd}
	</select>
	
	<!-- 비밀번호 체크 -->
	<select id="pwdCheck" parameterType="java.util.Map" resultType="java.lang.String">
		select memId from member where memId=#{id} and memPwd=#{pwd}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="pwdChange" parameterType="java.util.Map">
		update member set memPwd=#{newPwd} where memId=#{memId}
	</update>
	
	<delete id="leaveSuccess" parameterType="java.util.Map">
	begin
		insert into memberLeave values(#{memId},#{reason},#{requirement});
		
		delete from member where memId=#{memId};
	end;
	</delete>
	
	<insert id="reservePack" parameterType="java.util.Map">
		insert into reserveList(pack_no
								,memId
								,reservetime
								,paymethod
								,totalPay
								,paymentState
								,numOfPerson
								,list_seq) 
		                 values(#{pack_no}
		                 ,#{memId}
		                 ,sysdate
		                 ,#{paymethod}
		                 ,#{totalPay}
		                 ,#{paymentState}
		                 ,#{numOfPerson}
		                 ,list_seq.NEXTVAL) 
	</insert>
	
	<!-- 예약내역에 시간과 날짜 뿌릴 때 참고 : to_date('2002-09-05-14-11-12', 'yyyy-mm-dd-hh24-mi-ss') -->
	<select id="reserveList" parameterType="String" resultType="reserveList">
		select * from reservelist where memId=#{memId}
	</select>
	
	<select id="reserveCheck" parameterType="java.util.Map" resultType="Integer">
		select * from reservelist where memId=#{memId} AND pack_no=#{pack_no}
	</select>
	
	<select id="reserveList_unPiad" parameterType="String" resultType="reserveList">
		select * from reservelist where paymentstate=#{state}
	</select>
	
	<delete id="reserveCancel" parameterType="Integer">
		delete from reservelist where list_seq=#{seq}
	</delete>
</mapper>










